Installing das2py, the python extension for libdas2
---------------------------------------------------

Legacy Support Note
===================
Regardless of the python development team's ideology, it is a fact of
life in the scientific software world that many old programs exist
which are useful but for which there are no maintenence resources (i.e. 
time/money/talent).  This library depends on numpy 1.11 or higher, but
does not need python 3.  If you have to run older, unported software
that requires python 2, see the doc/legacy_notes.txt for manual python
2 build instructions on various platforms.  It's rather straighforward
to build the interpreter on Linux and MacOS.

Pre-build binaries
==================
There are many, many python environments these days.  And there are heated 
debates about how to best install and maintain python environments.  If you
are running an Anaconda distribution of python, installing libdas2 and das2py
can be preformed with the following single command:

   $ conda install -c dasdevelopers das2py

If you're not running Anaconda, or for some reason the command isn't working,
the python setup.py file can be used to update your system python installation
as detailed here.

These instructions assume you know how to find and open a terminal program on
your computer.  All text that should be typed at the command line starts with
the '$' character or three '>' as in '>>>', but the leading $ or >>> 
characters are not part of the command.

Python commands start with '>>>' and general shell commands start with '$'.


0. Setup
========
das2py is an extension for libdas2.  First build and install libdas2 as 
described in INSTALL.txt in the libdas2 root directory.  


1. Check that the python3 interpreter is installed
==================================================
In this step we make sure you have python.  Run the command:

   $ python3 --version
   
If you get the response "bash: python3: command not found..." then run:

   $ sudo yum install python3   # CentOS 7
	$ sudo dnf install python3   # CentOS 8
	$ sudo apt install python3   # Ubuntu
	$ sudo pkcon install python3 # Neon
	$ brew install python3       # MacOS


2. Install numpy and matplotlib
===============================
In order to run das2py you'll only need python and numpy.  But the examples 
included with the source code also demonstrate how to plot data, so matplotlib
is considered a dependency, though it may not be if you are not using it to
plot your data, or are not plotting anything at all.

Run the commands:

   $ python3
   >>> import numpy
   >>> exit()
  
If you get the response "ModuleNotFoundError: No module named 'numpy'" then
run:

   $ sudo yum install python3-numpy

to install numpy. 

To enable plotting run the commands:

   $ python3
      >>> import matplotlib
      >>> exit()
      
If you get the response "ModuleNotFoundError: No module named 'matplotlib'"
then run:

  $ sudo yum install python3-matplotlib

to install matplotlib. 


3. Install the CDF libraries and SpacePy (optional)
===================================================
das2py can output data to CDF (common data format) files, which are popular in
Heilophysics research.  If you want to be able to export datasets to CDF files
You'll first have to build the C based CDF libraries for your system.  It's 
important to download the latest CDF libraries as these have an embedded
leap-second table that must be updated whenever a new leap-second is added to 
global time keeping system.

Download file:

   cdf-dist-cdf.tar.gz

from:

   https://spdf.gsfc.nasa.gov/pub/software/cdf/dist/cdf37_0/

or a more recent version.  Then:

   $ cd $HOME/Downloads
   $ tar -xvzf cdf-dist-cdf.tar.gz
   $ cd cdf37_0-dist

and follow the instructions in README.install  A summary of the commands 
you'll issue are included here for convienence.

   $ sudo yum install ncurses-devel
   $ make OS=linux ENV=gnu all
   $ sudo make INSTALLDIR=/usr/local install
  
Running the command

   $ which skeletoncdf

will let you know that the cdf utilities are installed.


To install spacepy run:

   $ sudo yum install gcc-fortran
   $ sudo yum install python3-numpy-f2py
   $ sudo pip3 install --user spacepy

Test that pycdf works try the following commands:

   $ python3
   >>> import os
   >>> os.environ['CDF_LIB'] = '/usr/local/lib'
   >>> import spacepy.pycdf
   >>> exit()
  
If you don't get any import errors pycdf should work as intended.


4. Build/Install the software
=============================
Change to the directory where you downloaded libdas2:

   $ cd $HOME/svn/libdas2
  
Then go to the python bindings directory:

   $ cd bindings/python
  
If you installed libdas2 with PREFIX=/usr/local and N_ARCH=/ then you can
just run the setup.py file with no changes as follows:
  
   $ python3 setup.py build
   $ python3 setup.py install --user
   
otherwise you may need set a couple environment variables.  The following
example assumes an install in $HOME/include and $HOME/lib64, edit according
to your setup.

   $ export C_BUILD_DIR=$HOME/lib64
   $ export C_HDR_DIR=$HOME/include
   $ python3 setup.py build
   $ python3 setup.py install --user


5. Test the software
====================
In this section we make sure the das2 and _das2 modules are working correctly
Change to the python bindings directory:

   $ cd $HOME/svn/libdas2/bindings/python
   
And test basic functionality:

   $ python3 test/TestRead.py
   $ python3 test/TestDasTime.py
   $ python3 test/TestCatalog.py
   $ python3 test/TestSortMinimal.py

Then run a few example plots:

   $ python3 examples/ex02_galileo_pws_spectra.py
   
   $ python3 examples/ex03_cassini_rpws_multimode.py  
     (takes a few seconds to render, expand plot to make it look better)
     
   $ python3 examples/ex04_voyager_pws_query_by_time.py
     (example is failing as of 2019-05-06)

If you installed the CDF and SpacePy, you can CDF file creation by running
example 8:

   $ export CDF_LIB=/usr/local/lib
   $ python3 examples/ex08_juno_waves_wfrm_to_cdf.py
   
